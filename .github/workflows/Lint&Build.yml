# # # name: Lint & Build

# # # on:
# # #   push:
# # #     branches:
# # #       - main
# # #   pull_request:
# # #     branches:
# # #       - main

# # # jobs:
# # #   ci:
# # #     runs-on: ubuntu-latest

# # #     steps:
# # #       - name: Checkout Code
# # #         uses: actions/checkout@v4

# # #       - name: Setup Node.js
# # #         uses: actions/setup-node@v4
# # #         with:
# # #           node-version: 18

# # #       - name: Install dependencies
# # #         run: npm ci

# # #       - name: Run tests
# # #         run: npm run test

# # #       - name: Lint code
# # #         run: npm run lint

# # #       - name: Build project
# # #         run: npm run build

name: Lint, Test, Build, and Deploy to VPS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: 🧪 Test
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v4

      - name: 🧰 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: 📦 Install Dependencies
        run: npm ci

      - name: 🧪 Run Tests
        run: npm run test || echo "No tests found"

  lint:
    name: 🧹 Lint
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v4

      - name: 🧰 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: 📦 Install Dependencies
        run: npm ci

      - name: 🧹 Run ESLint
        run: npm run lint

  build:
    name: 🏗️ Build
    runs-on: ubuntu-latest
    needs: [test, lint] # Run only if test and lint succeed
    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v4

      - name: 🧰 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: 📦 Install Dependencies
        run: npm ci

      - name: 🏗️ Build Project
        run: npm run build

# #   deploy:
# #     name: 🚀 Deploy to VPS
# #     runs-on: ubuntu-latest
# #     needs: [build] # Only deploy if build succeeded
# #     steps:
# #       - name: 📡 Deploy via SSH
# #         uses: appleboy/ssh-action@v1.0.3
# #         with:
# #           host: ${{ secrets.VPS_HOST }}
# #           username: ${{ secrets.VPS_USER }}
# #           key: ${{ secrets.VPS_KEY }}
# #           port: ${{ secrets.VPS_PORT || 22 }}
# #           script: |
# #             cd /path/to/your/project
# #             git pull origin main
# #             npm install
# #             npm run build
# #             pm2 restart your-app-name

# name: Lint, Test, Build, and Deploy to VPS

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# env:
#   NODE_ENV: production

# jobs:
#   test:
#     name: 🧪 Test
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4

#       - uses: actions/setup-node@v4
#         with:
#           node-version: 18

#       - run: npm ci

#       - run: npm run test || echo "No tests found"

#   lint:
#     name: 🧹 Lint
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4

#       - uses: actions/setup-node@v4
#         with:
#           node-version: 18

#       - run: npm ci

#       - run: npm run lint

#   build:
#     name: 🏗️ Build
#     runs-on: ubuntu-latest
#     needs: [test, lint]

#     steps:
#       - uses: actions/checkout@v4

#       - uses: actions/setup-node@v4
#         with:
#           node-version: 18

#       - run: npm ci

#       # - name: Create .env file
#       #   run: echo "${{ secrets.ENV_FILE }}" > .env

#       - run: npm run build

#   # deploy:
#   #   name: 🚀 Deploy to VPS
#   #   runs-on: ubuntu-latest
#   #   needs: [build]

#   #   steps:
#   #     - name: 📡 SSH and Deploy
#   #       uses: appleboy/ssh-action@v1.0.3
#   #       with:
#   #         host: ${{ secrets.VPS_HOST }}
#   #         username: ${{ secrets.VPS_USER }}
#   #         key: ${{ secrets.VPS_KEY }}
#   #         port: ${{ secrets.VPS_PORT || 22 }}
#   #         script: |
#   #           cd /var/www/your-app
#   #           git pull origin main
#   #           echo "${{ secrets.ENV_FILE }}" > .env
#   #           npm install
#   #           npm run build
#   #           pm2 restart your-app-name
